// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.28.3
// source: api/clients/songs/types.proto

package protogen

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protogen "github.com/Benzogang-Tape/audio-hosting/playlists/api/protogen/clients/users"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SongFileExtension int32

const (
	SongFileExtension_MP3 SongFileExtension = 0
)

// Enum value maps for SongFileExtension.
var (
	SongFileExtension_name = map[int32]string{
		0: "MP3",
	}
	SongFileExtension_value = map[string]int32{
		"MP3": 0,
	}
)

func (x SongFileExtension) Enum() *SongFileExtension {
	p := new(SongFileExtension)
	*p = x
	return p
}

func (x SongFileExtension) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SongFileExtension) Descriptor() protoreflect.EnumDescriptor {
	return file_api_clients_songs_types_proto_enumTypes[0].Descriptor()
}

func (SongFileExtension) Type() protoreflect.EnumType {
	return &file_api_clients_songs_types_proto_enumTypes[0]
}

func (x SongFileExtension) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SongFileExtension.Descriptor instead.
func (SongFileExtension) EnumDescriptor() ([]byte, []int) {
	return file_api_clients_songs_types_proto_rawDescGZIP(), []int{0}
}

type ImageFileExtension int32

const (
	ImageFileExtension_JPEG ImageFileExtension = 0
	ImageFileExtension_PNG  ImageFileExtension = 1
	ImageFileExtension_GIF  ImageFileExtension = 2
)

// Enum value maps for ImageFileExtension.
var (
	ImageFileExtension_name = map[int32]string{
		0: "JPEG",
		1: "PNG",
		2: "GIF",
	}
	ImageFileExtension_value = map[string]int32{
		"JPEG": 0,
		"PNG":  1,
		"GIF":  2,
	}
)

func (x ImageFileExtension) Enum() *ImageFileExtension {
	p := new(ImageFileExtension)
	*p = x
	return p
}

func (x ImageFileExtension) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ImageFileExtension) Descriptor() protoreflect.EnumDescriptor {
	return file_api_clients_songs_types_proto_enumTypes[1].Descriptor()
}

func (ImageFileExtension) Type() protoreflect.EnumType {
	return &file_api_clients_songs_types_proto_enumTypes[1]
}

func (x ImageFileExtension) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ImageFileExtension.Descriptor instead.
func (ImageFileExtension) EnumDescriptor() ([]byte, []int) {
	return file_api_clients_songs_types_proto_rawDescGZIP(), []int{1}
}

type UploadRawSongRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilePart  []byte            `protobuf:"bytes,1,opt,name=file_part,json=filePart,proto3" json:"file_part,omitempty"` // Max 1MB per part
	Extension SongFileExtension `protobuf:"varint,2,opt,name=extension,proto3,enum=api.SongFileExtension" json:"extension,omitempty"`
	SongId    string            `protobuf:"bytes,3,opt,name=song_id,json=songId,proto3" json:"song_id,omitempty"`
}

func (x *UploadRawSongRequest) Reset() {
	*x = UploadRawSongRequest{}
	mi := &file_api_clients_songs_types_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadRawSongRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadRawSongRequest) ProtoMessage() {}

func (x *UploadRawSongRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_clients_songs_types_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadRawSongRequest.ProtoReflect.Descriptor instead.
func (*UploadRawSongRequest) Descriptor() ([]byte, []int) {
	return file_api_clients_songs_types_proto_rawDescGZIP(), []int{0}
}

func (x *UploadRawSongRequest) GetFilePart() []byte {
	if x != nil {
		return x.FilePart
	}
	return nil
}

func (x *UploadRawSongRequest) GetExtension() SongFileExtension {
	if x != nil {
		return x.Extension
	}
	return SongFileExtension_MP3
}

func (x *UploadRawSongRequest) GetSongId() string {
	if x != nil {
		return x.SongId
	}
	return ""
}

type UploadRawSongResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// newly created raw_song_i
	// looks like 902435aad48afe51260f23f8a73b38a3245cac25.extension
	// 1st part is sha1 hex-encoded 40 bytes hash of "Artist\u0001SongName".
	// 2nd part is one of the formats from SongFileExtension.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// it's just https://HOST/songs/api/v1/song/raw/902435aad48afe51260f23f8a73b38a3245cac25.extension
	Url string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *UploadRawSongResponse) Reset() {
	*x = UploadRawSongResponse{}
	mi := &file_api_clients_songs_types_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadRawSongResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadRawSongResponse) ProtoMessage() {}

func (x *UploadRawSongResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_clients_songs_types_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadRawSongResponse.ProtoReflect.Descriptor instead.
func (*UploadRawSongResponse) Descriptor() ([]byte, []int) {
	return file_api_clients_songs_types_proto_rawDescGZIP(), []int{1}
}

func (x *UploadRawSongResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UploadRawSongResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type GetRawSongRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RawSongId string `protobuf:"bytes,1,opt,name=raw_song_id,json=rawSongId,proto3" json:"raw_song_id,omitempty"`
}

func (x *GetRawSongRequest) Reset() {
	*x = GetRawSongRequest{}
	mi := &file_api_clients_songs_types_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRawSongRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRawSongRequest) ProtoMessage() {}

func (x *GetRawSongRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_clients_songs_types_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRawSongRequest.ProtoReflect.Descriptor instead.
func (*GetRawSongRequest) Descriptor() ([]byte, []int) {
	return file_api_clients_songs_types_proto_rawDescGZIP(), []int{2}
}

func (x *GetRawSongRequest) GetRawSongId() string {
	if x != nil {
		return x.RawSongId
	}
	return ""
}

type GetRawSongResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilePart []byte `protobuf:"bytes,1,opt,name=file_part,json=filePart,proto3" json:"file_part,omitempty"`
}

func (x *GetRawSongResponse) Reset() {
	*x = GetRawSongResponse{}
	mi := &file_api_clients_songs_types_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRawSongResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRawSongResponse) ProtoMessage() {}

func (x *GetRawSongResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_clients_songs_types_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRawSongResponse.ProtoReflect.Descriptor instead.
func (*GetRawSongResponse) Descriptor() ([]byte, []int) {
	return file_api_clients_songs_types_proto_rawDescGZIP(), []int{3}
}

func (x *GetRawSongResponse) GetFilePart() []byte {
	if x != nil {
		return x.FilePart
	}
	return nil
}

type UploadRawSongImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilePart  []byte             `protobuf:"bytes,1,opt,name=file_part,json=filePart,proto3" json:"file_part,omitempty"` // Max 1MB per part
	Extension ImageFileExtension `protobuf:"varint,2,opt,name=extension,proto3,enum=api.ImageFileExtension" json:"extension,omitempty"`
	SongId    string             `protobuf:"bytes,3,opt,name=song_id,json=songId,proto3" json:"song_id,omitempty"`
}

func (x *UploadRawSongImageRequest) Reset() {
	*x = UploadRawSongImageRequest{}
	mi := &file_api_clients_songs_types_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadRawSongImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadRawSongImageRequest) ProtoMessage() {}

func (x *UploadRawSongImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_clients_songs_types_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadRawSongImageRequest.ProtoReflect.Descriptor instead.
func (*UploadRawSongImageRequest) Descriptor() ([]byte, []int) {
	return file_api_clients_songs_types_proto_rawDescGZIP(), []int{4}
}

func (x *UploadRawSongImageRequest) GetFilePart() []byte {
	if x != nil {
		return x.FilePart
	}
	return nil
}

func (x *UploadRawSongImageRequest) GetExtension() ImageFileExtension {
	if x != nil {
		return x.Extension
	}
	return ImageFileExtension_JPEG
}

func (x *UploadRawSongImageRequest) GetSongId() string {
	if x != nil {
		return x.SongId
	}
	return ""
}

type UploadRawSongImageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Similar to UploadRawSong
	Id  string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Url string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *UploadRawSongImageResponse) Reset() {
	*x = UploadRawSongImageResponse{}
	mi := &file_api_clients_songs_types_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadRawSongImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadRawSongImageResponse) ProtoMessage() {}

func (x *UploadRawSongImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_clients_songs_types_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadRawSongImageResponse.ProtoReflect.Descriptor instead.
func (*UploadRawSongImageResponse) Descriptor() ([]byte, []int) {
	return file_api_clients_songs_types_proto_rawDescGZIP(), []int{5}
}

func (x *UploadRawSongImageResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UploadRawSongImageResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type GetRawSongImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RawImageId string `protobuf:"bytes,1,opt,name=raw_image_id,json=rawImageId,proto3" json:"raw_image_id,omitempty"`
}

func (x *GetRawSongImageRequest) Reset() {
	*x = GetRawSongImageRequest{}
	mi := &file_api_clients_songs_types_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRawSongImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRawSongImageRequest) ProtoMessage() {}

func (x *GetRawSongImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_clients_songs_types_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRawSongImageRequest.ProtoReflect.Descriptor instead.
func (*GetRawSongImageRequest) Descriptor() ([]byte, []int) {
	return file_api_clients_songs_types_proto_rawDescGZIP(), []int{6}
}

func (x *GetRawSongImageRequest) GetRawImageId() string {
	if x != nil {
		return x.RawImageId
	}
	return ""
}

type GetRawSongImageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilePart []byte `protobuf:"bytes,1,opt,name=file_part,json=filePart,proto3" json:"file_part,omitempty"`
}

func (x *GetRawSongImageResponse) Reset() {
	*x = GetRawSongImageResponse{}
	mi := &file_api_clients_songs_types_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRawSongImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRawSongImageResponse) ProtoMessage() {}

func (x *GetRawSongImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_clients_songs_types_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRawSongImageResponse.ProtoReflect.Descriptor instead.
func (*GetRawSongImageResponse) Descriptor() ([]byte, []int) {
	return file_api_clients_songs_types_proto_rawDescGZIP(), []int{7}
}

func (x *GetRawSongImageResponse) GetFilePart() []byte {
	if x != nil {
		return x.FilePart
	}
	return nil
}

type CreateSongRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	FeatArtistsIds []string `protobuf:"bytes,4,rep,name=feat_artists_ids,json=featArtistsIds,proto3" json:"feat_artists_ids,omitempty"`
}

func (x *CreateSongRequest) Reset() {
	*x = CreateSongRequest{}
	mi := &file_api_clients_songs_types_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSongRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSongRequest) ProtoMessage() {}

func (x *CreateSongRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_clients_songs_types_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSongRequest.ProtoReflect.Descriptor instead.
func (*CreateSongRequest) Descriptor() ([]byte, []int) {
	return file_api_clients_songs_types_proto_rawDescGZIP(), []int{8}
}

func (x *CreateSongRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateSongRequest) GetFeatArtistsIds() []string {
	if x != nil {
		return x.FeatArtistsIds
	}
	return nil
}

type CreateSongResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Singer  *protogen.Artist   `protobuf:"bytes,2,opt,name=singer,proto3" json:"singer,omitempty"`
	Name    string             `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Artists []*protogen.Artist `protobuf:"bytes,4,rep,name=artists,proto3" json:"artists,omitempty"`
}

func (x *CreateSongResponse) Reset() {
	*x = CreateSongResponse{}
	mi := &file_api_clients_songs_types_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSongResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSongResponse) ProtoMessage() {}

func (x *CreateSongResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_clients_songs_types_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSongResponse.ProtoReflect.Descriptor instead.
func (*CreateSongResponse) Descriptor() ([]byte, []int) {
	return file_api_clients_songs_types_proto_rawDescGZIP(), []int{9}
}

func (x *CreateSongResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateSongResponse) GetSinger() *protogen.Artist {
	if x != nil {
		return x.Singer
	}
	return nil
}

func (x *CreateSongResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateSongResponse) GetArtists() []*protogen.Artist {
	if x != nil {
		return x.Artists
	}
	return nil
}

type GetSongRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetSongRequest) Reset() {
	*x = GetSongRequest{}
	mi := &file_api_clients_songs_types_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSongRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSongRequest) ProtoMessage() {}

func (x *GetSongRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_clients_songs_types_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSongRequest.ProtoReflect.Descriptor instead.
func (*GetSongRequest) Descriptor() ([]byte, []int) {
	return file_api_clients_songs_types_proto_rawDescGZIP(), []int{10}
}

func (x *GetSongRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetSongResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Song *Song `protobuf:"bytes,1,opt,name=song,proto3" json:"song,omitempty"`
}

func (x *GetSongResponse) Reset() {
	*x = GetSongResponse{}
	mi := &file_api_clients_songs_types_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSongResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSongResponse) ProtoMessage() {}

func (x *GetSongResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_clients_songs_types_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSongResponse.ProtoReflect.Descriptor instead.
func (*GetSongResponse) Descriptor() ([]byte, []int) {
	return file_api_clients_songs_types_proto_rawDescGZIP(), []int{11}
}

func (x *GetSongResponse) GetSong() *Song {
	if x != nil {
		return x.Song
	}
	return nil
}

type UpdateSongRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	ImageUrl *string `protobuf:"bytes,4,opt,name=image_url,json=imageUrl,proto3,oneof" json:"image_url,omitempty"`
}

func (x *UpdateSongRequest) Reset() {
	*x = UpdateSongRequest{}
	mi := &file_api_clients_songs_types_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSongRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSongRequest) ProtoMessage() {}

func (x *UpdateSongRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_clients_songs_types_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSongRequest.ProtoReflect.Descriptor instead.
func (*UpdateSongRequest) Descriptor() ([]byte, []int) {
	return file_api_clients_songs_types_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateSongRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateSongRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateSongRequest) GetImageUrl() string {
	if x != nil && x.ImageUrl != nil {
		return *x.ImageUrl
	}
	return ""
}

type UpdateSongResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateSongResponse) Reset() {
	*x = UpdateSongResponse{}
	mi := &file_api_clients_songs_types_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSongResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSongResponse) ProtoMessage() {}

func (x *UpdateSongResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_clients_songs_types_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSongResponse.ProtoReflect.Descriptor instead.
func (*UpdateSongResponse) Descriptor() ([]byte, []int) {
	return file_api_clients_songs_types_proto_rawDescGZIP(), []int{13}
}

type DeleteSongsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteSongsRequest) Reset() {
	*x = DeleteSongsRequest{}
	mi := &file_api_clients_songs_types_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSongsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSongsRequest) ProtoMessage() {}

func (x *DeleteSongsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_clients_songs_types_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSongsRequest.ProtoReflect.Descriptor instead.
func (*DeleteSongsRequest) Descriptor() ([]byte, []int) {
	return file_api_clients_songs_types_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteSongsRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteSongsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteSongsResponse) Reset() {
	*x = DeleteSongsResponse{}
	mi := &file_api_clients_songs_types_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSongsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSongsResponse) ProtoMessage() {}

func (x *DeleteSongsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_clients_songs_types_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSongsResponse.ProtoReflect.Descriptor instead.
func (*DeleteSongsResponse) Descriptor() ([]byte, []int) {
	return file_api_clients_songs_types_proto_rawDescGZIP(), []int{15}
}

type Song struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Singer      *protogen.Artist       `protobuf:"bytes,9,opt,name=singer,proto3" json:"singer,omitempty"`
	Artists     []*protogen.Artist     `protobuf:"bytes,2,rep,name=artists,proto3" json:"artists,omitempty"`
	Name        string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	SongUrl     string                 `protobuf:"bytes,4,opt,name=song_url,json=songUrl,proto3" json:"song_url,omitempty"`
	ImageUrl    *string                `protobuf:"bytes,5,opt,name=image_url,json=imageUrl,proto3,oneof" json:"image_url,omitempty"`
	Duration    *durationpb.Duration   `protobuf:"bytes,6,opt,name=duration,proto3" json:"duration,omitempty"`
	WeightBytes int32                  `protobuf:"varint,7,opt,name=weight_bytes,json=weightBytes,proto3" json:"weight_bytes,omitempty"`
	ReleasedAt  *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=released_at,json=releasedAt,proto3,oneof" json:"released_at,omitempty"`
}

func (x *Song) Reset() {
	*x = Song{}
	mi := &file_api_clients_songs_types_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Song) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Song) ProtoMessage() {}

func (x *Song) ProtoReflect() protoreflect.Message {
	mi := &file_api_clients_songs_types_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Song.ProtoReflect.Descriptor instead.
func (*Song) Descriptor() ([]byte, []int) {
	return file_api_clients_songs_types_proto_rawDescGZIP(), []int{16}
}

func (x *Song) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Song) GetSinger() *protogen.Artist {
	if x != nil {
		return x.Singer
	}
	return nil
}

func (x *Song) GetArtists() []*protogen.Artist {
	if x != nil {
		return x.Artists
	}
	return nil
}

func (x *Song) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Song) GetSongUrl() string {
	if x != nil {
		return x.SongUrl
	}
	return ""
}

func (x *Song) GetImageUrl() string {
	if x != nil && x.ImageUrl != nil {
		return *x.ImageUrl
	}
	return ""
}

func (x *Song) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

func (x *Song) GetWeightBytes() int32 {
	if x != nil {
		return x.WeightBytes
	}
	return 0
}

func (x *Song) GetReleasedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ReleasedAt
	}
	return nil
}

type MySong struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Singer      *protogen.Artist       `protobuf:"bytes,9,opt,name=singer,proto3" json:"singer,omitempty"`
	Artists     []*protogen.Artist     `protobuf:"bytes,2,rep,name=artists,proto3" json:"artists,omitempty"`
	Name        string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	SongUrl     *string                `protobuf:"bytes,4,opt,name=song_url,json=songUrl,proto3,oneof" json:"song_url,omitempty"`
	ImageUrl    *string                `protobuf:"bytes,5,opt,name=image_url,json=imageUrl,proto3,oneof" json:"image_url,omitempty"`
	Duration    *durationpb.Duration   `protobuf:"bytes,6,opt,name=duration,proto3,oneof" json:"duration,omitempty"`
	WeightBytes *int32                 `protobuf:"varint,7,opt,name=weight_bytes,json=weightBytes,proto3,oneof" json:"weight_bytes,omitempty"`
	ReleasedAt  *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=released_at,json=releasedAt,proto3,oneof" json:"released_at,omitempty"`
	UploadedAt  *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=uploaded_at,json=uploadedAt,proto3" json:"uploaded_at,omitempty"`
}

func (x *MySong) Reset() {
	*x = MySong{}
	mi := &file_api_clients_songs_types_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MySong) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MySong) ProtoMessage() {}

func (x *MySong) ProtoReflect() protoreflect.Message {
	mi := &file_api_clients_songs_types_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MySong.ProtoReflect.Descriptor instead.
func (*MySong) Descriptor() ([]byte, []int) {
	return file_api_clients_songs_types_proto_rawDescGZIP(), []int{17}
}

func (x *MySong) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MySong) GetSinger() *protogen.Artist {
	if x != nil {
		return x.Singer
	}
	return nil
}

func (x *MySong) GetArtists() []*protogen.Artist {
	if x != nil {
		return x.Artists
	}
	return nil
}

func (x *MySong) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MySong) GetSongUrl() string {
	if x != nil && x.SongUrl != nil {
		return *x.SongUrl
	}
	return ""
}

func (x *MySong) GetImageUrl() string {
	if x != nil && x.ImageUrl != nil {
		return *x.ImageUrl
	}
	return ""
}

func (x *MySong) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

func (x *MySong) GetWeightBytes() int32 {
	if x != nil && x.WeightBytes != nil {
		return *x.WeightBytes
	}
	return 0
}

func (x *MySong) GetReleasedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ReleasedAt
	}
	return nil
}

func (x *MySong) GetUploadedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UploadedAt
	}
	return nil
}

type PaginationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastPage int32 `protobuf:"varint,1,opt,name=last_page,json=lastPage,proto3" json:"last_page,omitempty"`
}

func (x *PaginationResponse) Reset() {
	*x = PaginationResponse{}
	mi := &file_api_clients_songs_types_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaginationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginationResponse) ProtoMessage() {}

func (x *PaginationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_clients_songs_types_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginationResponse.ProtoReflect.Descriptor instead.
func (*PaginationResponse) Descriptor() ([]byte, []int) {
	return file_api_clients_songs_types_proto_rawDescGZIP(), []int{18}
}

func (x *PaginationResponse) GetLastPage() int32 {
	if x != nil {
		return x.LastPage
	}
	return 0
}

type GetSongsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Pagination queries
	Page     *int32 `protobuf:"varint,1,opt,name=page,proto3,oneof" json:"page,omitempty"`
	PageSize *int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3,oneof" json:"page_size,omitempty"`
	// Filtering queries, mutually exclusive
	ArtistId    *string  `protobuf:"bytes,3,opt,name=artist_id,json=artistId,proto3,oneof" json:"artist_id,omitempty"`
	MatchArtist *string  `protobuf:"bytes,4,opt,name=match_artist,json=matchArtist,proto3,oneof" json:"match_artist,omitempty"`
	MatchName   *string  `protobuf:"bytes,5,opt,name=match_name,json=matchName,proto3,oneof" json:"match_name,omitempty"`
	Ids         []string `protobuf:"bytes,6,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *GetSongsRequest) Reset() {
	*x = GetSongsRequest{}
	mi := &file_api_clients_songs_types_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSongsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSongsRequest) ProtoMessage() {}

func (x *GetSongsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_clients_songs_types_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSongsRequest.ProtoReflect.Descriptor instead.
func (*GetSongsRequest) Descriptor() ([]byte, []int) {
	return file_api_clients_songs_types_proto_rawDescGZIP(), []int{19}
}

func (x *GetSongsRequest) GetPage() int32 {
	if x != nil && x.Page != nil {
		return *x.Page
	}
	return 0
}

func (x *GetSongsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *GetSongsRequest) GetArtistId() string {
	if x != nil && x.ArtistId != nil {
		return *x.ArtistId
	}
	return ""
}

func (x *GetSongsRequest) GetMatchArtist() string {
	if x != nil && x.MatchArtist != nil {
		return *x.MatchArtist
	}
	return ""
}

func (x *GetSongsRequest) GetMatchName() string {
	if x != nil && x.MatchName != nil {
		return *x.MatchName
	}
	return ""
}

func (x *GetSongsRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type GetSongsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Songs      []*Song             `protobuf:"bytes,1,rep,name=songs,proto3" json:"songs,omitempty"`
	Pagination *PaginationResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GetSongsResponse) Reset() {
	*x = GetSongsResponse{}
	mi := &file_api_clients_songs_types_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSongsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSongsResponse) ProtoMessage() {}

func (x *GetSongsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_clients_songs_types_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSongsResponse.ProtoReflect.Descriptor instead.
func (*GetSongsResponse) Descriptor() ([]byte, []int) {
	return file_api_clients_songs_types_proto_rawDescGZIP(), []int{20}
}

func (x *GetSongsResponse) GetSongs() []*Song {
	if x != nil {
		return x.Songs
	}
	return nil
}

func (x *GetSongsResponse) GetPagination() *PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetMySongsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Pagination queries
	Page     *int32 `protobuf:"varint,1,opt,name=page,proto3,oneof" json:"page,omitempty"`
	PageSize *int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3,oneof" json:"page_size,omitempty"`
}

func (x *GetMySongsRequest) Reset() {
	*x = GetMySongsRequest{}
	mi := &file_api_clients_songs_types_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMySongsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMySongsRequest) ProtoMessage() {}

func (x *GetMySongsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_clients_songs_types_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMySongsRequest.ProtoReflect.Descriptor instead.
func (*GetMySongsRequest) Descriptor() ([]byte, []int) {
	return file_api_clients_songs_types_proto_rawDescGZIP(), []int{21}
}

func (x *GetMySongsRequest) GetPage() int32 {
	if x != nil && x.Page != nil {
		return *x.Page
	}
	return 0
}

func (x *GetMySongsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

type GetMySongsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Songs      []*MySong           `protobuf:"bytes,1,rep,name=songs,proto3" json:"songs,omitempty"`
	Pagination *PaginationResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GetMySongsResponse) Reset() {
	*x = GetMySongsResponse{}
	mi := &file_api_clients_songs_types_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMySongsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMySongsResponse) ProtoMessage() {}

func (x *GetMySongsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_clients_songs_types_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMySongsResponse.ProtoReflect.Descriptor instead.
func (*GetMySongsResponse) Descriptor() ([]byte, []int) {
	return file_api_clients_songs_types_proto_rawDescGZIP(), []int{22}
}

func (x *GetMySongsResponse) GetSongs() []*MySong {
	if x != nil {
		return x.Songs
	}
	return nil
}

func (x *GetMySongsResponse) GetPagination() *PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ReleaseSongsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids    []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	Notify bool     `protobuf:"varint,2,opt,name=notify,proto3" json:"notify,omitempty"`
}

func (x *ReleaseSongsRequest) Reset() {
	*x = ReleaseSongsRequest{}
	mi := &file_api_clients_songs_types_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleaseSongsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseSongsRequest) ProtoMessage() {}

func (x *ReleaseSongsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_clients_songs_types_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseSongsRequest.ProtoReflect.Descriptor instead.
func (*ReleaseSongsRequest) Descriptor() ([]byte, []int) {
	return file_api_clients_songs_types_proto_rawDescGZIP(), []int{23}
}

func (x *ReleaseSongsRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *ReleaseSongsRequest) GetNotify() bool {
	if x != nil {
		return x.Notify
	}
	return false
}

type ReleaseSongsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReleaseSongsResponse) Reset() {
	*x = ReleaseSongsResponse{}
	mi := &file_api_clients_songs_types_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleaseSongsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseSongsResponse) ProtoMessage() {}

func (x *ReleaseSongsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_clients_songs_types_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseSongsResponse.ProtoReflect.Descriptor instead.
func (*ReleaseSongsResponse) Descriptor() ([]byte, []int) {
	return file_api_clients_songs_types_proto_rawDescGZIP(), []int{24}
}

var File_api_clients_songs_types_proto protoreflect.FileDescriptor

var file_api_clients_songs_types_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x73, 0x6f,
	0x6e, 0x67, 0x73, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x03, 0x61, 0x70, 0x69, 0x1a, 0x1d, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x73, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x99, 0x01, 0x0a, 0x14, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x52, 0x61, 0x77, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x28, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x7a, 0x06, 0x10, 0x01, 0x18, 0x80,
	0x80, 0x40, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x74, 0x12, 0x34, 0x0a, 0x09,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x6f, 0x6e, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x45, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x07, 0x73, 0x6f, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x06, 0x73,
	0x6f, 0x6e, 0x67, 0x49, 0x64, 0x22, 0x39, 0x0a, 0x15, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52,
	0x61, 0x77, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x22, 0x33, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x52, 0x61, 0x77, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0b, 0x72, 0x61, 0x77, 0x5f, 0x73, 0x6f, 0x6e,
	0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x61, 0x77, 0x53,
	0x6f, 0x6e, 0x67, 0x49, 0x64, 0x22, 0x31, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x52, 0x61, 0x77, 0x53,
	0x6f, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x74, 0x22, 0x9f, 0x01, 0x0a, 0x19, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x52, 0x61, 0x77, 0x53, 0x6f, 0x6e, 0x67, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70,
	0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x7a, 0x06,
	0x10, 0x01, 0x18, 0x80, 0x80, 0x40, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x74,
	0x12, 0x35, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x46,
	0x69, 0x6c, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x07, 0x73, 0x6f, 0x6e, 0x67, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0,
	0x01, 0x01, 0x52, 0x06, 0x73, 0x6f, 0x6e, 0x67, 0x49, 0x64, 0x22, 0x3e, 0x0a, 0x1a, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x52, 0x61, 0x77, 0x53, 0x6f, 0x6e, 0x67, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x3a, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x52, 0x61, 0x77, 0x53, 0x6f, 0x6e, 0x67, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x72, 0x61, 0x77, 0x5f, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x61, 0x77, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0x36, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x52, 0x61, 0x77,
	0x53, 0x6f, 0x6e, 0x67, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x74, 0x22, 0x7c,
	0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0x80, 0x02, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x10, 0x66, 0x65, 0x61, 0x74, 0x5f, 0x61, 0x72, 0x74, 0x69,
	0x73, 0x74, 0x73, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x42, 0x11, 0xfa,
	0x42, 0x0e, 0x92, 0x01, 0x0b, 0x08, 0x00, 0x10, 0x10, 0x22, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01,
	0x52, 0x0e, 0x66, 0x65, 0x61, 0x74, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x49, 0x64, 0x73,
	0x4a, 0x04, 0x08, 0x02, 0x10, 0x03, 0x4a, 0x04, 0x08, 0x03, 0x10, 0x04, 0x22, 0x90, 0x01, 0x0a,
	0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x52, 0x06, 0x73, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x52, 0x07, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x22,
	0x2a, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa,
	0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x02, 0x69, 0x64, 0x22, 0x30, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d,
	0x0a, 0x04, 0x73, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x04, 0x73, 0x6f, 0x6e, 0x67, 0x22, 0x8d, 0x01,
	0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07,
	0x72, 0x05, 0x10, 0x01, 0x18, 0x80, 0x02, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a,
	0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x88, 0x01, 0x01, 0x48, 0x00, 0x52, 0x08, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x03, 0x22, 0x14, 0x0a,
	0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x3a, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x6f, 0x6e,
	0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x03, 0x69, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x42, 0x12, 0xfa, 0x42, 0x0f, 0x92, 0x01, 0x0c, 0x08, 0x01,
	0x10, 0xe8, 0x07, 0x22, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22,
	0x15, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x6f, 0x6e, 0x67, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xf9, 0x02, 0x0a, 0x04, 0x53, 0x6f, 0x6e, 0x67, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x29, 0x0a, 0x06, 0x73, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x72, 0x74, 0x69,
	0x73, 0x74, 0x52, 0x06, 0x73, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x07, 0x61, 0x72,
	0x74, 0x69, 0x73, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x52, 0x07,
	0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73,
	0x6f, 0x6e, 0x67, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x6f, 0x6e, 0x67, 0x55, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x21, 0x0a, 0x0c, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x12, 0x40, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x48, 0x01, 0x52, 0x0a, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x41,
	0x74, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75,
	0x72, 0x6c, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x22, 0xf2, 0x03, 0x0a, 0x06, 0x4d, 0x79, 0x53, 0x6f, 0x6e, 0x67, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a,
	0x06, 0x73, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74,
	0x52, 0x06, 0x73, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x07, 0x61, 0x72, 0x74, 0x69,
	0x73, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x52, 0x07, 0x61, 0x72,
	0x74, 0x69, 0x73, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x08, 0x73, 0x6f, 0x6e,
	0x67, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x73,
	0x6f, 0x6e, 0x67, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x08,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x3a, 0x0a, 0x08, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x02, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x77, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x48, 0x03, 0x52,
	0x0b, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x42, 0x79, 0x74, 0x65, 0x73, 0x88, 0x01, 0x01, 0x12,
	0x40, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x48, 0x04, 0x52, 0x0a, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x41, 0x74, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x73, 0x6f, 0x6e, 0x67, 0x5f, 0x75, 0x72, 0x6c, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x72, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x22, 0x31, 0x0a, 0x12, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x61, 0x67, 0x65, 0x22, 0xc6, 0x02, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x53, 0x6f, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x1a, 0x02, 0x28, 0x01, 0x48, 0x00, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x2c, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x1a, 0x05, 0x18, 0xe8, 0x07, 0x28, 0x01, 0x48,
	0x01, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2a,
	0x0a, 0x09, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x48, 0x02, 0x52, 0x08, 0x61,
	0x72, 0x74, 0x69, 0x73, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x03, 0x52, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x2d, 0x0a, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18,
	0x40, 0x48, 0x04, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x1b, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x42, 0x09,
	0xfa, 0x42, 0x06, 0x92, 0x01, 0x03, 0x10, 0xe8, 0x07, 0x52, 0x03, 0x69, 0x64, 0x73, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74,
	0x5f, 0x69, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x61, 0x72,
	0x74, 0x69, 0x73, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x6c, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x6e, 0x67, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x05, 0x73, 0x6f, 0x6e, 0x67, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x6f, 0x6e,
	0x67, 0x52, 0x05, 0x73, 0x6f, 0x6e, 0x67, 0x73, 0x12, 0x37, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x7a, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x53, 0x6f, 0x6e, 0x67, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x28, 0x01, 0x48, 0x00, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0xfa, 0x42, 0x07,
	0x1a, 0x05, 0x18, 0xe8, 0x07, 0x28, 0x01, 0x48, 0x01, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x70, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x53, 0x6f, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x05, 0x73, 0x6f, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x79, 0x53, 0x6f, 0x6e, 0x67, 0x52,
	0x05, 0x73, 0x6f, 0x6e, 0x67, 0x73, 0x12, 0x37, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x53, 0x0a, 0x13, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x53, 0x6f, 0x6e, 0x67, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x42, 0x12, 0xfa, 0x42, 0x0f, 0x92, 0x01, 0x0c, 0x08, 0x01, 0x10, 0xe8, 0x07,
	0x22, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x22, 0x16, 0x0a, 0x14, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x53,
	0x6f, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x1c, 0x0a, 0x11,
	0x53, 0x6f, 0x6e, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x50, 0x33, 0x10, 0x00, 0x2a, 0x30, 0x0a, 0x12, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x08, 0x0a, 0x04, 0x4a, 0x50, 0x45, 0x47, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x4e,
	0x47, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x49, 0x46, 0x10, 0x02, 0x42, 0x33, 0x5a, 0x31,
	0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x72, 0x6a, 0x61, 0x37, 0x32, 0x2e, 0x72, 0x75,
	0x2f, 0x67, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x2f, 0x74, 0x65, 0x61, 0x6d, 0x30, 0x32, 0x2f, 0x73,
	0x6f, 0x6e, 0x67, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x65,
	0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_clients_songs_types_proto_rawDescOnce sync.Once
	file_api_clients_songs_types_proto_rawDescData = file_api_clients_songs_types_proto_rawDesc
)

func file_api_clients_songs_types_proto_rawDescGZIP() []byte {
	file_api_clients_songs_types_proto_rawDescOnce.Do(func() {
		file_api_clients_songs_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_clients_songs_types_proto_rawDescData)
	})
	return file_api_clients_songs_types_proto_rawDescData
}

var file_api_clients_songs_types_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_api_clients_songs_types_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_api_clients_songs_types_proto_goTypes = []any{
	(SongFileExtension)(0),             // 0: api.SongFileExtension
	(ImageFileExtension)(0),            // 1: api.ImageFileExtension
	(*UploadRawSongRequest)(nil),       // 2: api.UploadRawSongRequest
	(*UploadRawSongResponse)(nil),      // 3: api.UploadRawSongResponse
	(*GetRawSongRequest)(nil),          // 4: api.GetRawSongRequest
	(*GetRawSongResponse)(nil),         // 5: api.GetRawSongResponse
	(*UploadRawSongImageRequest)(nil),  // 6: api.UploadRawSongImageRequest
	(*UploadRawSongImageResponse)(nil), // 7: api.UploadRawSongImageResponse
	(*GetRawSongImageRequest)(nil),     // 8: api.GetRawSongImageRequest
	(*GetRawSongImageResponse)(nil),    // 9: api.GetRawSongImageResponse
	(*CreateSongRequest)(nil),          // 10: api.CreateSongRequest
	(*CreateSongResponse)(nil),         // 11: api.CreateSongResponse
	(*GetSongRequest)(nil),             // 12: api.GetSongRequest
	(*GetSongResponse)(nil),            // 13: api.GetSongResponse
	(*UpdateSongRequest)(nil),          // 14: api.UpdateSongRequest
	(*UpdateSongResponse)(nil),         // 15: api.UpdateSongResponse
	(*DeleteSongsRequest)(nil),         // 16: api.DeleteSongsRequest
	(*DeleteSongsResponse)(nil),        // 17: api.DeleteSongsResponse
	(*Song)(nil),                       // 18: api.Song
	(*MySong)(nil),                     // 19: api.MySong
	(*PaginationResponse)(nil),         // 20: api.PaginationResponse
	(*GetSongsRequest)(nil),            // 21: api.GetSongsRequest
	(*GetSongsResponse)(nil),           // 22: api.GetSongsResponse
	(*GetMySongsRequest)(nil),          // 23: api.GetMySongsRequest
	(*GetMySongsResponse)(nil),         // 24: api.GetMySongsResponse
	(*ReleaseSongsRequest)(nil),        // 25: api.ReleaseSongsRequest
	(*ReleaseSongsResponse)(nil),       // 26: api.ReleaseSongsResponse
	(*protogen.Artist)(nil),            // 27: users_api.Artist
	(*durationpb.Duration)(nil),        // 28: google.protobuf.Duration
	(*timestamppb.Timestamp)(nil),      // 29: google.protobuf.Timestamp
}
var file_api_clients_songs_types_proto_depIdxs = []int32{
	0,  // 0: api.UploadRawSongRequest.extension:type_name -> api.SongFileExtension
	1,  // 1: api.UploadRawSongImageRequest.extension:type_name -> api.ImageFileExtension
	27, // 2: api.CreateSongResponse.singer:type_name -> users_api.Artist
	27, // 3: api.CreateSongResponse.artists:type_name -> users_api.Artist
	18, // 4: api.GetSongResponse.song:type_name -> api.Song
	27, // 5: api.Song.singer:type_name -> users_api.Artist
	27, // 6: api.Song.artists:type_name -> users_api.Artist
	28, // 7: api.Song.duration:type_name -> google.protobuf.Duration
	29, // 8: api.Song.released_at:type_name -> google.protobuf.Timestamp
	27, // 9: api.MySong.singer:type_name -> users_api.Artist
	27, // 10: api.MySong.artists:type_name -> users_api.Artist
	28, // 11: api.MySong.duration:type_name -> google.protobuf.Duration
	29, // 12: api.MySong.released_at:type_name -> google.protobuf.Timestamp
	29, // 13: api.MySong.uploaded_at:type_name -> google.protobuf.Timestamp
	18, // 14: api.GetSongsResponse.songs:type_name -> api.Song
	20, // 15: api.GetSongsResponse.pagination:type_name -> api.PaginationResponse
	19, // 16: api.GetMySongsResponse.songs:type_name -> api.MySong
	20, // 17: api.GetMySongsResponse.pagination:type_name -> api.PaginationResponse
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_api_clients_songs_types_proto_init() }
func file_api_clients_songs_types_proto_init() {
	if File_api_clients_songs_types_proto != nil {
		return
	}
	file_api_clients_songs_types_proto_msgTypes[12].OneofWrappers = []any{}
	file_api_clients_songs_types_proto_msgTypes[16].OneofWrappers = []any{}
	file_api_clients_songs_types_proto_msgTypes[17].OneofWrappers = []any{}
	file_api_clients_songs_types_proto_msgTypes[19].OneofWrappers = []any{}
	file_api_clients_songs_types_proto_msgTypes[21].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_clients_songs_types_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_clients_songs_types_proto_goTypes,
		DependencyIndexes: file_api_clients_songs_types_proto_depIdxs,
		EnumInfos:         file_api_clients_songs_types_proto_enumTypes,
		MessageInfos:      file_api_clients_songs_types_proto_msgTypes,
	}.Build()
	File_api_clients_songs_types_proto = out.File
	file_api_clients_songs_types_proto_rawDesc = nil
	file_api_clients_songs_types_proto_goTypes = nil
	file_api_clients_songs_types_proto_depIdxs = nil
}
