name: users
services:
  postgres:
    env_file: configs/.env
    volumes:
      - pgdata1:/var/lib/postgresql/data
    image: postgres:17.2-alpine3.20
    environment:
      PGUSER: ${POSTGRES_USER}
      PGDATABASE: ${POSTGRES_DB}
    ports:
      - 5455:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 2s
      timeout: 2s
      retries: 8

  # redis:
  #   environment:
  #     - REDIS_REPLICATION_MODE=master
  #   volumes:
  #     - ./configs/redis.conf:/usr/local/etc/redis/redis.conf
  #   image: redis:7.2-alpine3.20
  #   command: redis-server /usr/local/etc/redis/redis.conf
  #   healthcheck:
  #     test: ["CMD-SHELL", "redis-cli ping"]
  #     interval: 2s
  #     timeout: 2s
  #     retries: 8

  # TODO: not configured
  # minio:
  #   image: minio/minio:RELEASE.2024-11-07T00-52-20Z.fips
  #   # TODO: remove to not have access outside the compose network
  #   ports:
  #     - '9000:9000'
  #     - '9001:9001'
  #   volumes:
  #     - minio_data:/bitnami/minio/data
  #
  # kafka:
  #   image: docker.io/bitnami/kafka:3.9.0-debian-12-r3
  #   # TODO: remove to not have access outside the compose network
  #   ports:
  #     - 9092:9092
  #   volumes:
  #     - kafka_data:/bitnami
  #   environment:
  #     # KRaft settings
  #     - KAFKA_CFG_NODE_ID=0
  #     - KAFKA_CFG_PROCESS_ROLES=controller,broker
  #     - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
  #     # Listeners
  #     - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
  #     - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
  #     - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
  #     - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
  #     - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
  #   healthcheck:
  #     test:
  #       [
  #         "CMD-SHELL",
  #         "echo 'test-message' | kafka-console-producer.sh --broker-list localhost:9092 --topic health-check-topic && kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic health-check-topic --from-beginning --max-messages 1 | grep 'test-message'",
  #       ]
  #     start_period: 15s
  #     interval: 5s
  #     timeout: 10s
  #     retries: 8

  service:
    depends_on:
      postgres:
        condition: service_healthy
      # redis:
      #   condition: service_healthy
      # kafka:
      #   condition: service_healthy
      # minio:
      #   condition: service_healthy
    ports:
      - 8080:8080
      - 9090:9090
    volumes:
      - ./configs:/app/configs:ro
    build: .

volumes:
  pgdata1:
  kafka_data:
  # minio_data:
